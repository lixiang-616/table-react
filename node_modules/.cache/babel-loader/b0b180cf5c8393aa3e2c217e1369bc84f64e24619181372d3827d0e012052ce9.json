{"ast":null,"code":"/*\n    该文件是用于创建一个为Count服务的reducer，reducer的本质就是一个函数\n    reducer函数会接到两个参数，分别为：之前的状态（preState），动作对象（action）\n*/import{FETCHMENU}from\"./constant\";const state={menuData:[],routerMenu:'',topMenu:[],menuList:[]};export default function countReducer(){let preState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:state;let action=arguments.length>1?arguments[1]:undefined;const{type,data}=action;switch(type){case FETCHMENU:return{...state,routerMenu:data};default:return preState;}}","map":{"version":3,"names":["FETCHMENU","state","menuData","routerMenu","topMenu","menuList","countReducer","preState","arguments","length","undefined","action","type","data"],"sources":["/Users/lixiang/李响/tableReact/src/redux/count_reducers.js"],"sourcesContent":["/*\n    该文件是用于创建一个为Count服务的reducer，reducer的本质就是一个函数\n    reducer函数会接到两个参数，分别为：之前的状态（preState），动作对象（action）\n*/\nimport { FETCHMENU } from \"./constant\"\nconst state = {\n    menuData: [],\n    routerMenu: '',\n    topMenu: [],\n    menuList: [],\n}\n\nexport default function countReducer(preState = state, action) {\n    const { type, data } = action\n    switch (type) {\n        case FETCHMENU:\n            return {\n                ...state,\n                routerMenu: data\n            }\n        default:\n            return preState\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,EACA,OAASA,SAAS,KAAQ,YAAY,CACtC,KAAM,CAAAC,KAAK,CAAG,CACVC,QAAQ,CAAE,EAAE,CACZC,UAAU,CAAE,EAAE,CACdC,OAAO,CAAE,EAAE,CACXC,QAAQ,CAAE,EACd,CAAC,CAED,cAAe,SAAS,CAAAC,YAAYA,CAAA,CAA2B,IAA1B,CAAAC,QAAQ,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGP,KAAK,IAAE,CAAAU,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CACzD,KAAM,CAAEE,IAAI,CAAEC,IAAK,CAAC,CAAGF,MAAM,CAC7B,OAAQC,IAAI,EACR,IAAK,CAAAZ,SAAS,CACV,MAAO,CACH,GAAGC,KAAK,CACRE,UAAU,CAAEU,IAChB,CAAC,CACL,QACI,MAAO,CAAAN,QAAQ,CACvB,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}