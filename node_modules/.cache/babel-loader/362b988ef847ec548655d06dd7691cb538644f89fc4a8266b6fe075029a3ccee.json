{"ast":null,"code":"/*\n    该文件是用于创建一个为Count服务的reducer，reducer的本质就是一个函数\n    reducer函数会接到两个参数，分别为：之前的状态（preState），动作对象（action）\n*/\nimport { FETCHMENU } from \"./constant\";\nconst initState = 0;\nconst routerData = '';\nconst state = {\n  menuData: [],\n  routerData: '',\n  menuList: []\n};\nexport default function countReducer(preState = state, action) {\n  const {\n    type,\n    data\n  } = action;\n  switch (type) {\n    case FETCHMENU:\n      //如果是加\n      return preState = data;\n    default:\n      return preState;\n  }\n}","map":{"version":3,"names":["FETCHMENU","initState","routerData","state","menuData","menuList","countReducer","preState","action","type","data"],"sources":["/Users/lixiang/李响/tableReact/src/redux/count_reducers.js"],"sourcesContent":["/*\n    该文件是用于创建一个为Count服务的reducer，reducer的本质就是一个函数\n    reducer函数会接到两个参数，分别为：之前的状态（preState），动作对象（action）\n*/\nimport { FETCHMENU } from \"./constant\"\nconst initState = 0\nconst routerData = ''\nconst state = {\n    menuData: [],\n    routerData: '',\n    menuList: [],\n}\n\nexport default function countReducer(preState = state, action) {\n    const { type, data } = action\n    switch (type) {\n        case FETCHMENU: //如果是加\n            return preState = data\n        default:\n            return preState\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,YAAY;AACtC,MAAMC,SAAS,GAAG,CAAC;AACnB,MAAMC,UAAU,GAAG,EAAE;AACrB,MAAMC,KAAK,GAAG;EACVC,QAAQ,EAAE,EAAE;EACZF,UAAU,EAAE,EAAE;EACdG,QAAQ,EAAE;AACd,CAAC;AAED,eAAe,SAASC,YAAYA,CAACC,QAAQ,GAAGJ,KAAK,EAAEK,MAAM,EAAE;EAC3D,MAAM;IAAEC,IAAI;IAAEC;EAAK,CAAC,GAAGF,MAAM;EAC7B,QAAQC,IAAI;IACR,KAAKT,SAAS;MAAE;MACZ,OAAOO,QAAQ,GAAGG,IAAI;IAC1B;MACI,OAAOH,QAAQ;EACvB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}